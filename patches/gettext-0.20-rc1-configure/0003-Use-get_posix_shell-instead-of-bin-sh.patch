From: Michele Locati <michele@locati.it>
Date: Tue, 30 Apr 2019 11:47:52 +0200
Subject: [PATCH] Use get_posix_shell() instead of /bin/sh

--- a/gettext-tools/src/msginit.c
+++ b/gettext-tools/src/msginit.c
@@ -144,6 +144,7 @@ static const char *language_of_locale (const char *locale);
 static char *get_field (const char *header, const char *field);
 static msgdomain_list_ty *fill_header (msgdomain_list_ty *mdlp);
 static msgdomain_list_ty *update_msgstr_plurals (msgdomain_list_ty *mdlp);
+static const char *get_posix_shell ();
 
 
 int
@@ -836,6 +837,7 @@ static const char *
 project_id (const char *header)
 {
   const char *old_field;
+  const char *posix_shell;
   const char *gettextlibdir;
   char *prog;
   char *argv[3];
@@ -874,6 +876,12 @@ project_id (const char *header)
       return old_field;
     }
 
+  posix_shell = get_posix_shell();
+  if (posix_shell == NULL)
+    {
+      goto failed;
+    }
+  
   gettextlibdir = getenv ("GETTEXTLIBDIR_SRCDIR");
   if (gettextlibdir == NULL || gettextlibdir[0] == '\0')
     gettextlibdir = relocate (LIBDIR "/gettext");
@@ -881,10 +889,10 @@ project_id (const char *header)
   prog = xconcatenated_filename (gettextlibdir, "project-id", NULL);
 
   /* Call the project-id shell script.  */
-  argv[0] = "/bin/sh";
+  argv[0] = (char *) posix_shell;
   argv[1] = prog;
   argv[2] = NULL;
-  child = create_pipe_in (prog, "/bin/sh", argv, DEV_NULL, false, true, false,
+  child = create_pipe_in (prog, posix_shell, argv, DEV_NULL, false, true, false,
                           fd);
   if (child == -1)
     goto failed;
@@ -931,6 +939,7 @@ static const char *
 project_id_version (const char *header)
 {
   const char *old_field;
+  const char *posix_shell;
   const char *gettextlibdir;
   char *prog;
   char *argv[4];
@@ -948,6 +957,12 @@ project_id_version (const char *header)
   if (old_field != NULL && strcmp (old_field, "PACKAGE VERSION") != 0)
     return old_field;
 
+  posix_shell = get_posix_shell();
+  if (posix_shell == NULL)
+    {
+      goto failed;
+    }
+
   gettextlibdir = getenv ("GETTEXTLIBDIR_SRCDIR");
   if (gettextlibdir == NULL || gettextlibdir[0] == '\0')
     gettextlibdir = relocate (LIBDIR "/gettext");
@@ -955,11 +970,11 @@ project_id_version (const char *header)
   prog = xconcatenated_filename (gettextlibdir, "project-id", NULL);
 
   /* Call the project-id shell script.  */
-  argv[0] = "/bin/sh";
+  argv[0] = (char *) posix_shell;
   argv[1] = prog;
   argv[2] = "yes";
   argv[3] = NULL;
-  child = create_pipe_in (prog, "/bin/sh", argv, DEV_NULL, false, true, false,
+  child = create_pipe_in (prog, posix_shell, argv, DEV_NULL, false, true, false,
                           fd);
   if (child == -1)
     goto failed;
@@ -1101,6 +1116,7 @@ get_user_fullname ()
 static const char *
 get_user_email ()
 {
+  const char *posix_shell;
   const char *prog = relocate (LIBDIR "/gettext/user-email");
   char *argv[4];
   pid_t child;
@@ -1111,15 +1127,21 @@ get_user_email ()
   size_t linelen;
   int exitstatus;
 
+  posix_shell = get_posix_shell();
+  if (posix_shell == NULL)
+    {
+      goto failed;
+    }
+
   /* Ask the user for his email address.  */
-  argv[0] = "/bin/sh";
+  argv[0] = (char *) posix_shell;
   argv[1] = (char *) prog;
   argv[2] = (char *) _("\
 The new message catalog should contain your email address, so that users can\n\
 give you feedback about the translations, and so that maintainers can contact\n\
 you in case of unexpected technical problems.\n");
   argv[3] = NULL;
-  child = create_pipe_in (prog, "/bin/sh", argv, DEV_NULL, false, true, false,
+  child = create_pipe_in (prog, posix_shell, argv, DEV_NULL, false, true, false,
                           fd);
   if (child == -1)
     goto failed;
@@ -1200,6 +1222,7 @@ language_team_englishname ()
 static const char *
 language_team_address ()
 {
+  const char *posix_shell;
   const char *prog = relocate (PROJECTSDIR "/team-address");
   char *argv[7];
   pid_t child;
@@ -1210,15 +1233,21 @@ language_team_address ()
   size_t linelen;
   int exitstatus;
 
+  posix_shell = get_posix_shell();
+  if (posix_shell == NULL)
+    {
+      goto failed;
+    }
+
   /* Call the team-address shell script.  */
-  argv[0] = "/bin/sh";
+  argv[0] = (char *) posix_shell;
   argv[1] = (char *) prog;
   argv[2] = (char *) relocate (PROJECTSDIR);
   argv[3] = (char *) relocate (LIBDIR "/gettext");
   argv[4] = (char *) catalogname;
   argv[5] = (char *) language;
   argv[6] = NULL;
-  child = create_pipe_in (prog, "/bin/sh", argv, DEV_NULL, false, true, false,
+  child = create_pipe_in (prog, posix_shell, argv, DEV_NULL, false, true, false,
                           fd);
   if (child == -1)
     goto failed;
@@ -1858,3 +1887,24 @@ update_msgstr_plurals (msgdomain_list_ty *mdlp)
     }
   return mdlp;
 }
+
+/* Get the path to the POSIX shell (or NULL if it's not available).  */
+static const char *
+get_posix_shell ()
+{
+  static int already = 0;
+  static const char * result = NULL;
+
+  if (already == 0)
+    {
+
+      if (result == NULL && access("/bin/sh", X_OK) == 0)
+        {
+          result = "/bin/sh";
+        }
+
+      already = 1;
+    }
+
+  return result;
+}
-- 
2.20.1.windows.1
